// Signature format: 4.0
package com.urlaunched.android.design.extensions {

  public final class GeneralExtensionsKt {
    method @androidx.compose.runtime.Composable public static int toPx(float);
  }

  public enum Keyboard {
    method public static com.urlaunched.android.design.extensions.Keyboard valueOf(String value) throws java.lang.IllegalArgumentException, java.lang.NullPointerException;
    method public static com.urlaunched.android.design.extensions.Keyboard[] values();
    enum_constant public static final com.urlaunched.android.design.extensions.Keyboard CLOSED;
    enum_constant public static final com.urlaunched.android.design.extensions.Keyboard OPENED;
  }

  public final class KeyboardExtensionsKt {
    method public static androidx.compose.ui.Modifier clearFocusOnKeyboardDismiss(androidx.compose.ui.Modifier);
    method @androidx.compose.runtime.Composable public static androidx.compose.runtime.State<com.urlaunched.android.design.extensions.Keyboard> keyboardAsState();
  }

}

package com.urlaunched.android.design.resources.dimens {

  public final class Dimens {
    method public float getCornerRadiusBig();
    method public float getCornerRadiusBigSpecial();
    method public float getCornerRadiusLarge();
    method public float getCornerRadiusMediumSpecial();
    method public float getCornerRadiusNormal();
    method public float getCornerRadiusNormalSpecial();
    method public float getCornerRadiusSmall();
    method public float getCornerRadiusTiny();
    method public float getSpacingBig();
    method public float getSpacingBigSpecial();
    method public float getSpacingExtraLarge();
    method public float getSpacingLarge();
    method public float getSpacingLargeSpecial();
    method public float getSpacingNormal();
    method public float getSpacingNormalSpecial();
    method public float getSpacingSmall();
    method public float getSpacingSmallSpecial();
    method public float getSpacingTiny();
    method public float getSpacingTinyHalf();
    property public final float cornerRadiusBig;
    property public final float cornerRadiusBigSpecial;
    property public final float cornerRadiusLarge;
    property public final float cornerRadiusMediumSpecial;
    property public final float cornerRadiusNormal;
    property public final float cornerRadiusNormalSpecial;
    property public final float cornerRadiusSmall;
    property public final float cornerRadiusTiny;
    property public final float spacingBig;
    property public final float spacingBigSpecial;
    property public final float spacingExtraLarge;
    property public final float spacingLarge;
    property public final float spacingLargeSpecial;
    property public final float spacingNormal;
    property public final float spacingNormalSpecial;
    property public final float spacingSmall;
    property public final float spacingSmallSpecial;
    property public final float spacingTiny;
    property public final float spacingTinyHalf;
    field public static final com.urlaunched.android.design.resources.dimens.Dimens INSTANCE;
  }

}

package com.urlaunched.android.design.ui.backhandler {

  public final class DisableBackButtonKt {
    method @androidx.compose.runtime.Composable public static void DisableBackButton();
  }

}

package com.urlaunched.android.design.ui.boxwithconstraints {

  public final class BoxWithConstraintsKt {
    method @androidx.compose.runtime.Composable public static void BoxWithConstraints(optional androidx.compose.ui.Modifier modifier, kotlin.jvm.functions.Function2<? super androidx.compose.ui.unit.Dp,? super androidx.compose.ui.unit.Dp,kotlin.Unit> content);
  }

}

package com.urlaunched.android.design.ui.horizontalpager {

  public final class HorizontalPagerKt {
    method @androidx.compose.runtime.Composable public static void HorizontalPager(optional androidx.compose.ui.Modifier modifier, androidx.compose.foundation.pager.PagerState pagerState, int currentPageIndex, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.pager.PageSize pageSize, optional int beyondBoundsPageCount, optional float pageSpacing, optional androidx.compose.ui.Alignment.Vertical verticalAlignment, optional androidx.compose.foundation.gestures.snapping.SnapFlingBehavior flingBehavior, optional boolean userScrollEnabled, optional boolean reverseLayout, optional kotlin.jvm.functions.Function1<? super java.lang.Integer,?>? key, optional androidx.compose.ui.input.nestedscroll.NestedScrollConnection pageNestedScrollConnection, kotlin.jvm.functions.Function1<? super java.lang.Integer,kotlin.Unit> content);
  }

}

package com.urlaunched.android.design.ui.image {

  public final class UrlImageKt {
    method @androidx.compose.runtime.Composable public static void UrlImage(optional androidx.compose.ui.Modifier modifier, Object? model, kotlin.jvm.functions.Function0<kotlin.Unit> placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit> errorPlaceholder, optional androidx.compose.ui.layout.ContentScale scale, optional androidx.compose.ui.graphics.ColorFilter? colorFilter, optional String? contentDescription, optional float alpha, optional coil.ImageLoader imageLoader, optional kotlin.jvm.functions.Function0<kotlin.Unit> onSuccess);
  }

}

package com.urlaunched.android.design.ui.paging {

  public enum LocalPagingModeEnum {
    method public static com.urlaunched.android.design.ui.paging.LocalPagingModeEnum valueOf(String value) throws java.lang.IllegalArgumentException, java.lang.NullPointerException;
    method public static com.urlaunched.android.design.ui.paging.LocalPagingModeEnum[] values();
    enum_constant public static final com.urlaunched.android.design.ui.paging.LocalPagingModeEnum EMPTY;
    enum_constant public static final com.urlaunched.android.design.ui.paging.LocalPagingModeEnum ERROR;
    enum_constant public static final com.urlaunched.android.design.ui.paging.LocalPagingModeEnum LOADING;
    enum_constant public static final com.urlaunched.android.design.ui.paging.LocalPagingModeEnum READY;
  }

  public final class PagingColumnKt {
    method @androidx.compose.runtime.Composable public static <T> void PagingColumn(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.LazyListState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.ui.Alignment.Horizontal horizontalAlignment, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit>? appendIndicator);
    method @androidx.compose.runtime.Composable public static <T> void PagingColumn(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.LazyListState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.ui.Alignment.Horizontal horizontalAlignment, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit>? appendIndicator);
  }

  public final class PagingContainerKt {
    method @androidx.compose.runtime.Composable public static <T> void PagingContainer(kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function1<? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> pagingContent);
  }

  public final class PagingHorizontalGridKt {
    method @androidx.compose.runtime.Composable public static <T> void PagingHorizontalGrid(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, androidx.compose.foundation.lazy.grid.GridCells rows, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.grid.LazyGridState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super T,kotlin.Unit> item, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function1<? super T,androidx.compose.foundation.lazy.grid.GridItemSpan>? itemSpan, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit>? appendIndicator);
    method @androidx.compose.runtime.Composable public static <T> void PagingHorizontalGrid(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, androidx.compose.foundation.lazy.grid.GridCells rows, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.grid.LazyGridState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function1<? super T,androidx.compose.foundation.lazy.grid.GridItemSpan>? itemSpan, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit>? appendIndicator);
  }

  public final class PagingPullRefreshColumnKt {
    method @androidx.compose.runtime.Composable public static <T> void PagingPullRefreshColumn(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.LazyListState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.ui.Alignment.Horizontal horizontalAlignment, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long refreshIndicatorBackgroundColor, optional long refreshIndicatorContentColor, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit>? appendIndicator);
    method @androidx.compose.runtime.Composable public static <T> void PagingPullRefreshColumn(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.LazyListState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.ui.Alignment.Horizontal horizontalAlignment, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long refreshIndicatorBackgroundColor, optional long refreshIndicatorContentColor, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit>? appendIndicator);
  }

  public final class PagingPullRefreshVerticalGridKt {
    method @androidx.compose.runtime.Composable public static <T> void PagingPullRefreshVerticalGrid(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, androidx.compose.foundation.lazy.grid.GridCells columns, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.grid.LazyGridState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long refreshIndicatorBackgroundColor, optional long refreshIndicatorContentColor, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function1<? super T,androidx.compose.foundation.lazy.grid.GridItemSpan>? itemSpan, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit>? appendIndicator);
    method @androidx.compose.runtime.Composable public static <T> void PagingPullRefreshVerticalGrid(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, androidx.compose.foundation.lazy.grid.GridCells columns, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.grid.LazyGridState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long refreshIndicatorBackgroundColor, optional long refreshIndicatorContentColor, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function1<? super T,androidx.compose.foundation.lazy.grid.GridItemSpan>? itemSpan, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit>? appendIndicator);
  }

  public final class PagingRowKt {
    method @androidx.compose.runtime.Composable public static <T> void PagingRow(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.LazyListState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.ui.Alignment.Vertical verticalAlignment, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit>? appendIndicator);
    method @androidx.compose.runtime.Composable public static <T> void PagingRow(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.LazyListState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.ui.Alignment.Vertical verticalAlignment, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit>? appendIndicator);
  }

  public final class PagingState<T> {
    ctor public PagingState(androidx.paging.compose.LazyPagingItems<T> pagingItems, boolean isLoading, boolean isAppendLoading, boolean isLoadingError, boolean isAppendError, boolean isNoItems);
    method public androidx.paging.compose.LazyPagingItems<T> component1();
    method public boolean component2();
    method public boolean component3();
    method public boolean component4();
    method public boolean component5();
    method public boolean component6();
    method public com.urlaunched.android.design.ui.paging.PagingState<T> copy(androidx.paging.compose.LazyPagingItems<T> pagingItems, boolean isLoading, boolean isAppendLoading, boolean isLoadingError, boolean isAppendError, boolean isNoItems);
    method public androidx.paging.compose.LazyPagingItems<T> getPagingItems();
    method public boolean isAppendError();
    method public boolean isAppendLoading();
    method public boolean isLoading();
    method public boolean isLoadingError();
    method public boolean isNoItems();
    property public final boolean isAppendError;
    property public final boolean isAppendLoading;
    property public final boolean isLoading;
    property public final boolean isLoadingError;
    property public final boolean isNoItems;
    property public final androidx.paging.compose.LazyPagingItems<T> pagingItems;
  }

  public final class PagingVerticalGridKt {
    method @androidx.compose.runtime.Composable public static <T> void PagingVerticalGrid(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, androidx.compose.foundation.lazy.grid.GridCells columns, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.grid.LazyGridState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super T,kotlin.Unit> item, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function1<? super T,androidx.compose.foundation.lazy.grid.GridItemSpan>? itemSpan, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit>? appendIndicator);
    method @androidx.compose.runtime.Composable public static <T> void PagingVerticalGrid(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, androidx.compose.foundation.lazy.grid.GridCells columns, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.grid.LazyGridState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function1<? super T,androidx.compose.foundation.lazy.grid.GridItemSpan>? itemSpan, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit>? appendIndicator);
  }

  public final class PagingationModeKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.paging.LocalPagingModeEnum> getLocalPagingMode();
    property public static final androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.paging.LocalPagingModeEnum> LocalPagingMode;
  }

}

package com.urlaunched.android.design.ui.progressbarcontainer {

  public final class ProgressBarContainerKt {
    method @androidx.compose.runtime.Composable public static void ProgressBarContainer(optional androidx.compose.ui.Modifier modifier, boolean isLoading, optional long indicatorColor, optional long indicatorTrackColor, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

}

package com.urlaunched.android.design.ui.shadow {

  public final class ShadowKt {
    method public static androidx.compose.ui.Modifier shadow(androidx.compose.ui.Modifier, optional long color, optional float alpha, optional float cornersRadius, optional float shadowBlurRadius, optional long offset);
  }

}

package com.urlaunched.android.design.ui.shimmer {

  public final class ShimmerKt {
    method public static androidx.compose.ui.Modifier shimmer(androidx.compose.ui.Modifier, optional long backgroundColor, optional long highlightColor, optional androidx.compose.ui.graphics.Shape shape);
  }

}

package com.urlaunched.android.design.ui.textfield {

  public final class PasswordTextFieldKt {
    method @androidx.compose.runtime.Composable public static void PasswordTextField(optional androidx.compose.ui.Modifier modifier, String value, String label, optional long focusedBorderColor, optional long unfocusedBorderColor, optional androidx.compose.ui.graphics.Color? errorBorderColor, optional long errorTextColor, optional long textColor, optional long selectionHandleColor, optional long selectionBackgroundColor, optional androidx.compose.ui.graphics.Brush cursorBrush, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.ui.text.TextStyle labelStyle, optional long labelColor, optional long backgroundColor, optional androidx.compose.ui.graphics.Shape backgroundShape, optional float borderWidth, optional androidx.compose.ui.graphics.Shape borderShape, optional androidx.compose.ui.text.TextStyle placeholderStyle, optional long placeholderColor, optional long bottomLabelColor, optional androidx.compose.ui.text.TextStyle errorTextStyle, optional androidx.compose.ui.text.TextStyle bottomLabelTextStyle, optional String? placeHolder, optional String? bottomLabel, optional String? error, optional boolean enabled, optional androidx.compose.foundation.text.KeyboardActions keyboardActions, optional kotlin.jvm.functions.Function0<kotlin.Unit>? labelIcon, kotlin.jvm.functions.Function1<? super java.lang.String,kotlin.Unit> onValueChange, kotlin.jvm.functions.Function0<kotlin.Unit> passwordVisibleIcon, kotlin.jvm.functions.Function0<kotlin.Unit> passwordHiddenIcon);
  }

  public final class TextFieldKt {
    method @androidx.compose.runtime.Composable public static void TextField(optional androidx.compose.ui.Modifier modifier, String value, String? label, optional long focusedBorderColor, optional long unfocusedBorderColor, optional androidx.compose.ui.graphics.Color? errorBorderColor, optional long errorTextColor, optional long textColor, optional long focusedTextColor, optional long selectionHandleColor, optional long selectionBackgroundColor, optional androidx.compose.ui.graphics.Brush cursorBrush, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.ui.text.TextStyle labelStyle, optional long labelColor, optional long unfocusedLabelColor, optional long errorLabelColor, optional long backgroundColor, optional long unfocusedBackgroundColor, optional androidx.compose.ui.graphics.Shape backgroundShape, optional float borderWidth, optional androidx.compose.ui.graphics.Shape borderShape, optional androidx.compose.ui.text.TextStyle placeholderStyle, optional long placeholderColor, optional long bottomLabelColor, optional androidx.compose.ui.text.TextStyle errorTextStyle, optional androidx.compose.ui.text.TextStyle bottomLabelTextStyle, optional String? placeHolder, optional String? bottomLabel, optional String? error, optional boolean enabled, optional androidx.compose.foundation.text.KeyboardOptions keyboardOptions, optional androidx.compose.foundation.text.KeyboardActions keyboardActions, optional boolean singleLine, optional int maxLines, optional int minLines, optional androidx.compose.ui.text.input.VisualTransformation visualTransformation, optional boolean collapseLabel, optional androidx.compose.ui.unit.Dp? textFieldHeight, optional boolean readOnly, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? labelIcon, optional boolean trailingIconAlwaysShown, kotlin.jvm.functions.Function1<? super java.lang.String,kotlin.Unit> onValueChange);
  }

}


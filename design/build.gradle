plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.ktlint)
    alias(libs.plugins.metalava)
}

android {
    namespace 'com.urlaunched.design'
    compileSdk gradleDependencies.compileSdk

    defaultConfig {
        minSdk gradleDependencies.minSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.composeCompilerVersion.get().toString()
    }
}

metalava {
    sourcePaths.setFrom("src/main")
    filename.set("api/current.api")
}

dependencies {
    // Android
    implementation libs.androidCoreDependencies.core
    implementation libs.androidCoreDependencies.appcompat
    implementation libs.androidCoreDependencies.lifecycle

    // Kotlin
    implementation(platform(libs.kotlinDependencies.bom))
    implementation libs.kotlinDependencies.coroutines

    // Jetpack Compose
    implementation libs.composeDependencies.composeActivity
    implementation libs.composeDependencies.composeUi
    implementation libs.composeDependencies.composePreview
    implementation libs.composeDependencies.composeMaterial3
    implementation libs.composeDependencies.composeNavigation
    implementation libs.composeDependencies.composeConstraintLayout
    implementation libs.composeDependencies.runtime
    debugImplementation libs.composeDependencies.composeUiTooling
    debugImplementation libs.composeDependencies.composeUiTestManifest

    // Paging
    implementation libs.pagingDependencies.core
    implementation libs.pagingDependencies.compose

    // Placeholder
    implementation libs.composePlaceholder.core
}